`ifndef DEFINE_STATE

// This defines the states
typedef enum logic [2:0] {
	S_IDLE,
	S_ENABLE_UART_RX,
	S_WAIT_UART_RX,
	M1, 
	M2
} top_state_type;

typedef enum logic [1:0] {
	S_RXC_IDLE,
	S_RXC_SYNC,
	S_RXC_ASSEMBLE_DATA,
	S_RXC_STOP_BIT
} RX_Controller_state_type;

typedef enum logic [2:0] {
	S_US_IDLE,
	S_US_STRIP_FILE_HEADER_1,
	S_US_STRIP_FILE_HEADER_2,
	S_US_START_FIRST_BYTE_RECEIVE,
	S_US_WRITE_FIRST_BYTE,
	S_US_START_SECOND_BYTE_RECEIVE,
	S_US_WRITE_SECOND_BYTE
} UART_SRAM_state_type;

typedef enum logic [3:0] {
	S_VS_WAIT_NEW_PIXEL_ROW,
	S_VS_NEW_PIXEL_ROW_DELAY_1,
	S_VS_NEW_PIXEL_ROW_DELAY_2,
	S_VS_NEW_PIXEL_ROW_DELAY_3,
	S_VS_NEW_PIXEL_ROW_DELAY_4,
	S_VS_NEW_PIXEL_ROW_DELAY_5,
	S_VS_FETCH_PIXEL_DATA_0,
	S_VS_FETCH_PIXEL_DATA_1,
	S_VS_FETCH_PIXEL_DATA_2,
	S_VS_FETCH_PIXEL_DATA_3
} VGA_SRAM_state_type;

typedef enum logic [5:0] {
	S_M1_IDLE,
	S_LEAD_IN_0,
	S_LEAD_IN_1,
	S_LEAD_IN_2,
	S_LEAD_IN_3,
	S_LEAD_IN_4,
	S_LEAD_IN_5,
	S_LEAD_IN_6,
	S_LEAD_IN_7,
	S_LEAD_IN_8,
	S_LEAD_IN_9,
	S_LEAD_IN_10,
	S_LEAD_IN_11,
	S_LEAD_IN_12,
	S_LEAD_IN_13,
	S_LEAD_IN_14,
	S_LEAD_IN_15,
	S_LEAD_IN_16,
	S_LEAD_IN_17,
	S_LEAD_IN_18,
	S_LEAD_IN_19,
	S_COMMON_0,
	S_COMMON_1,
	S_COMMON_2,
	S_COMMON_3,
	S_COMMON_4,
	S_COMMON_5,
	S_COMMON_6,
	S_LEAD_OUT_0,
	S_LEAD_OUT_1,
	S_LEAD_OUT_2,
	S_LEAD_OUT_3,
	S_LEAD_OUT_4,
	S_LEAD_OUT_5,
	S_LEAD_OUT_6,
	S_LEAD_OUT_7,
	S_LEAD_OUT_8,
	S_LEAD_OUT_9
} m1_state_type;

typedef enum logic [5:0] {
	S_M2_IDLE,
	S_FETCH_DUMMY,
	S_FETCH_0,
	S_FETCH_1,
	S_FETCH_2,
	S_FETCH_3,
	S_FETCH_4,
	S_FETCH_5,
	S_FETCH_6,
	S_FETCH_7,
	S_CALC_T_DUMMY_0,
	S_CALC_T_DUMMY_1,
	S_CALC_T_DUMMY_2,
	S_CALC_T_DUMMY_3,
	S_CALC_T_0,
	S_CALC_T_1,
	S_CALC_T_2,
	S_CALC_T_3,
	S_CALC_T_4,
	S_CALC_T_5,
	S_CALC_T_6,
	S_CALC_T_7,
	S_CALC_T_WRITE_0,
	S_CALC_S_DUMMY_0,
	S_CALC_S_DUMMY_1,
	S_CALC_S_DUMMY_2,
	S_CALC_S_DUMMY_3,
	S_CALC_S_0,
	S_CALC_S_1,
	S_CALC_S_2,
	S_CALC_S_3,
	S_CALC_S_4,
	S_CALC_S_5,
	S_CALC_S_6,
	S_CALC_S_7,
	S_CALC_S_WRITE_0,
	S_WRITE_S_DUMMY,
	S_WRITE_S_0,
	S_WRITE_S_1,
	S_WRITE_S_2,
	S_WRITE_S_3,
	S_WRITE_S_4,
	S_WRITE_S_5,
	S_WRITE_S_6,
	S_WRITE_S_7,
	S_WRITE_S_8,
	S_WRITE_S_9,
	S_WRITE_S_10
} m2_state_type;


`define DEFINE_STATE 1
`endif
